{
  "contractName": "HodlupManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "DcaCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dcaContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "createDcaPaire",
      "outputs": [
        {
          "internalType": "address",
          "name": "dcaContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAllFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalFees",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "name": "executeSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeAllSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"DcaCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"createDcaPaire\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dcaContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dcaContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeAllSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"executeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows the owner to create and manage multiple DCA pairs and execute operations on them.\",\"events\":{\"DcaCreated(string,address,uint256)\":{\"details\":\"Emitted when a new DCA pair is created.\",\"params\":{\"_contractAddress\":\"The address of the DCA pair contract.\",\"_name\":\"The name of the DCA pair.\",\"_timestamp\":\"The timestamp when the DCA pair was created.\"}}},\"kind\":\"dev\",\"methods\":{\"createDcaPaire(string,address,address,address,uint256)\":{\"details\":\"Creates a new DCA pair contract.\",\"params\":{\"_fee\":\"The swap fee percentage.\",\"_name\":\"The name of the DCA pair.\",\"_tokenFrom\":\"Address of the input token for swaps.\",\"_tokenTo\":\"Address of the output token for swaps.\",\"_uniswapRouter\":\"Address of the Uniswap router.\"},\"returns\":{\"dcaContract\":\"The address of the created DCA pair contract.\"}},\"executeAllSwap()\":{\"details\":\"Executes swaps for all DCA pair contracts.\"},\"executeSwap(string)\":{\"details\":\"Executes swaps for a specific DCA pair contract.\",\"params\":{\"contractName\":\"The name of the DCA pair contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawAllFees()\":{\"details\":\"Withdraws all fees from all DCA pair contracts.\",\"returns\":{\"totalFees\":\"The total amount of fees withdrawn from all contracts.\"}},\"withdrawFees(string)\":{\"details\":\"Withdraws fees from a DCA pair contract.\",\"params\":{\"contractName\":\"The name of the DCA pair contract.\"},\"returns\":{\"_0\":\"fees The amount of fees withdrawn.\"}}},\"title\":\"HodlupManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createDcaPaire(string,address,address,address,uint256)\":{\"notice\":\"This function creates a new DCA pair contract using the create2 method.\"},\"executeAllSwap()\":{\"notice\":\"This function allows the owner to execute swaps for all DCA pair contracts.\"},\"executeSwap(string)\":{\"notice\":\"This function allows the owner to execute swaps for a specific DCA pair contract.\"},\"withdrawAllFees()\":{\"notice\":\"This function allows the owner to withdraw all fees from all DCA pair contracts.\"},\"withdrawFees(string)\":{\"notice\":\"This function allows the owner to withdraw fees from a specific DCA pair contract.\"}},\"notice\":\"A contract for managing DCA (Dollar-Cost Averaging) pairs and their operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HodlupManager.sol\":\"HodlupManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"project:/contracts/DcaHodlup.sol\":{\"keccak256\":\"0x48b03d6d0e8afa45c495a1e47fa538088181f1182eb66904456a6205a12ea5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6352ee9b7fc1b5fec777506e0cc4daad0dd100b41e03588b61faa1dbe69eaf\",\"dweb:/ipfs/QmbyWjNMuW6rAvfTBkzf7pvG5A24vPi2DgEdSmYDdNa1MF\"]},\"project:/contracts/HodlupManager.sol\":{\"keccak256\":\"0xa1534e1362841e4118db2c62a788a4a4558736e92c9a9ca4ea6abfed9f21fa16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abc6c70c779e5afa39d7a0d6d9f9e4e29ee5951bde55c14ede0d407802b8f6a2\",\"dweb:/ipfs/QmQhdRqEyYFm3icDvPV6gDymL1LMbW6jccZJDEPRQbGHcP\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6138f98061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c806392c4b2891161006657806392c4b2891461010357806394ea338714610116578063af236af41461014a578063de55dbbc14610152578063f2fde38b1461015a57600080fd5b80627fedfe146100975780635145b2b4146100bd578063715018a6146100e85780638da5cb5b146100f2575b600080fd5b6100aa6100a53660046107eb565b61016d565b6040519081526020015b60405180910390f35b6100d06100cb36600461083f565b610204565b6040516001600160a01b0390911681526020016100b4565b6100f06103ad565b005b6000546001600160a01b03166100d0565b6100f06101113660046107eb565b6103c1565b6100d06101243660046107eb565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6100aa610443565b6100f0610533565b6100f06101683660046108b6565b610613565b6000610177610691565b60018260405161018791906108fc565b90815260408051602092819003830181205463d294f09360e01b825291516001600160a01b039092169263d294f0939260048084019382900301816000875af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610918565b90505b919050565b600061020e610691565b60008660405160200161022191906108fc565b60405160208183030381529060405280519060200120905060006040518060200161024b9061073b565b6020820181038252601f19601f820116604052509050818151602083016000f59250823b61027857600080fd5b60405163cf756fdf60e01b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284169063cf756fdf90608401600060405180830381600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b50505050826001896040516102fb91906108fc565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0161036689826109ba565b507fba2ffa1886908ded7f5c34a05cf9ddb538ac0a72200e97db4b78757b710da55388844260405161039a93929190610a7a565b60405180910390a1505095945050505050565b6103b5610691565b6103bf60006106eb565b565b6103c9610691565b6001816040516103d991906108fc565b9081526040805191829003602001822054630599f58160e41b835290516001600160a01b039091169163599f581091600480830192600092919082900301818387803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505050565b600061044d610691565b60025460005b8181101561052e5760006002828154811061047057610470610ac5565b90600052602060002001805461048590610931565b80601f01602080910402602001604051908101604052809291908181526020018280546104b190610931565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905061050e8161016d565b6105189085610af1565b935050808061052690610b0a565b915050610453565b505090565b61053b610691565b60025460005b8181101561060f5760006002828154811061055e5761055e610ac5565b90600052602060002001805461057390610931565b80601f016020809104026020016040519081016040528092919081815260200182805461059f90610931565b80156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b505050505090506105fc816103c1565b508061060781610b0a565b915050610541565b5050565b61061b610691565b6001600160a01b0381166106855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61068e816106eb565b50565b6000546001600160a01b031633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612da080610b2483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261076f57600080fd5b813567ffffffffffffffff8082111561078a5761078a610748565b604051601f8301601f19908116603f011681019082821181831017156107b2576107b2610748565b816040528381528660208588010111156107cb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156107fd57600080fd5b813567ffffffffffffffff81111561081457600080fd5b6108208482850161075e565b949350505050565b80356001600160a01b03811681146101ff57600080fd5b600080600080600060a0868803121561085757600080fd5b853567ffffffffffffffff81111561086e57600080fd5b61087a8882890161075e565b95505061088960208701610828565b935061089760408701610828565b92506108a560608701610828565b949793965091946080013592915050565b6000602082840312156108c857600080fd5b6108d182610828565b9392505050565b60005b838110156108f35781810151838201526020016108db565b50506000910152565b6000825161090e8184602087016108d8565b9190910192915050565b60006020828403121561092a57600080fd5b5051919050565b600181811c9082168061094557607f821691505b60208210810361096557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109b557600081815260208120601f850160051c810160208610156109925750805b601f850160051c820191505b818110156109b15782815560010161099e565b5050505b505050565b815167ffffffffffffffff8111156109d4576109d4610748565b6109e8816109e28454610931565b8461096b565b602080601f831160018114610a1d5760008415610a055750858301515b600019600386901b1c1916600185901b1785556109b1565b600085815260208120601f198616915b82811015610a4c57888601518255948401946001909101908401610a2d565b5085821015610a6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260008451806060840152610a998160808501602089016108d8565b6001600160a01b039490941660208301525060408101919091526080601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b0457610b04610adb565b92915050565b600060018201610b1c57610b1c610adb565b506001019056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612d21806200007f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806399b240ac11610097578063d294f09311610066578063d294f09314610212578063d2ad50031461021a578063d816b2041461022d578063f2fde38b1461024057600080fd5b806399b240ac146101c65780639c89bb3d146101d9578063c6ac4339146101ec578063cf756fdf146101ff57600080fd5b8063599f5810116100d3578063599f581014610190578063715018a61461019a5780638204b199146101a25780638da5cb5b146101b557600080fd5b806310fb6fc11461010557806316aab88f1461012e578063502c9bd51461014e57806354cf2aeb14610179575b600080fd5b610118610113366004612396565b610253565b6040516101259190612513565b60405180910390f35b61014161013c366004612544565b610400565b604051610125919061255f565b61016161015c3660046125c1565b6106ec565b6040516001600160a01b039091168152602001610125565b61018260075481565b604051908152602001610125565b610198610716565b005b610198610728565b600a54610161906001600160a01b031681565b6000546001600160a01b0316610161565b6101986101d43660046125da565b61073a565b6101986101e7366004612396565b61090c565b600b54610161906001600160a01b031681565b61019861020d36600461266a565b61095e565b610182610a4c565b6101986102283660046126b5565b610b6a565b61019861023b366004612710565b610c5b565b61019861024e366004612544565b611120565b61025b61228d565b3360009081526004602052604090819020905161027b9085908590612772565b9081526020016040518091039020604051806101800160405290816000820180546102a590612782565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190612782565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b50505091835250506001820154602082015260028201546040820152600380830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101209092019160ff169081111561039757610397612428565b60038111156103a8576103a8612428565b8152600982015461010081046001600160a01b03166020830152604090910190600160a81b900460ff1660018111156103e3576103e3612428565b60018111156103f4576103f4612428565b90525090505b92915050565b606061040a611199565b6001600160a01b0382166000908152600460205260408120600181015490916060905b828110156106e157600084600101828154811061044c5761044c6127bc565b90600052602060002001805461046190612782565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90612782565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b50505050509050600085600001826040516104f591906127d2565b90815260405190819003602001902090506000600982015460ff16600381111561052157610521612428565b14801561054057508060020154816005015461053d9190612804565b42115b156106cc57806040518061018001604052908160008201805461056290612782565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90612782565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b50505091835250506001820154602082015260028201546040820152600380830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101209092019160ff169081111561065457610654612428565b600381111561066557610665612428565b8152600982015461010081046001600160a01b03166020830152604090910190600160a81b900460ff1660018111156106a0576106a0612428565b60018111156106b1576106b1612428565b905250845185906106c06127bc565b60200260200101819052505b505080806106d990612817565b91505061042d565b50925050505b919050565b600581815481106106fc57600080fd5b6000918252602090912001546001600160a01b0316905081565b61071e611199565b6107266111f3565b565b610730611199565b610726600061161b565b6107468688308861166b565b600a5461075e9087906001600160a01b0316876116dc565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612830565b600b546040519192506000916001600160a01b03909116906107ee9086908690612772565b6000604051808303816000865af19150503d806000811461082b576040519150601f19603f3d011682016040523d82523d6000602084013e610830565b606091505b50509050806108765760405162461bcd60e51b815260206004820152600d60248201526c4661696c6564206174206f6e6560981b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190612830565b905082811115610900576109008730886108fb8786612849565b61166b565b50505050505050505050565b81818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061094e925083915061178e9050565b610959338484611803565b505050565b6001546001600160a01b0316156109c55760405162461bcd60e51b815260206004820152602560248201527f436f6e74726163742068617320616c7265616479206265656e20696e697469616044820152641b1a5e995960da1b606482015260840161086d565b600180546001600160a01b039586166001600160a01b0319918216179091556002805494861694821694909417909355600380549290941691831691909117909255600791909155600a8054821673216b4b4ba9f3e719726886d34a177484278bfcae179055600b805490911673def171fe48cf0115b1d80b88dc8eab59176fee57179055565b6000610a56611199565b506001546001600160a01b0316600081815260066020526040908190205490516370a0823160e01b8152306004820152909182916370a0823190602401602060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190612830565b10610b0e57600154610af0906001600160a01b03163383611d33565b6001546001600160a01b031660009081526006602052604081205590565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f2073756666696369656e742066756e6473206f6e20636f6e74726163742060448201526a746f20676574206665657360a81b606482015260840161086d565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bac925083915061178e9050565b33600090815260046020526040908190209051839190610bcf9087908790612772565b908152604051908190036020019020600901805460ff19166001836003811115610bfb57610bfb612428565b02179055506001805460025460405133937f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f93610c4d936001600160a01b03918216939116918a918a91904290612885565b60405180910390a250505050565b84610c9b5760405162461bcd60e51b815260206004820152601060248201526f1b985b59481b5d5cdd081899481cd95d60821b604482015260640161086d565b33600090815260046020526040908190209051610cbb9088908890612772565b908152602001604051809103902060060154600014610d1c5760405162461bcd60e51b815260206004820152601c60248201527f506f736974696f6e20697320616c7265616479206578697374696e6700000000604482015260640161086d565b6003831015610d6d5760405162461bcd60e51b815260206004820152601c60248201527f7468697320696e74657276616c206973206e6f7420616c6c6f77656400000000604482015260640161086d565b60008411610db55760405162461bcd60e51b81526020600482015260156024820152744e6f20616d6f756e742073657420666f722044434160581b604482015260640161086d565b81158015610dc257508015155b80610dd557508115801590610dd5575080155b610e3a5760405162461bcd60e51b815260206004820152603060248201527f536574206f6e6c7920616d6f756e74207065722073776170206f72206e756d6260448201526f6572206f6620697465726174696f6e7360801b606482015260840161086d565b6000808311610e6a5761271082610e5187836128d2565b610e5b91906128e9565b610e6591906128e9565b610e6c565b825b9050610e7733611d63565b610ebe57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b60405180610180016040528088888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602082018890526040820187905260608201859052608082018490524260a0830181905260c083015260e08201819052610100820181905261012082015233610140820152610160018315610f58576000610f5b565b60015b6001811115610f6c57610f6c612428565b905233600090815260046020526040908190209051610f8e908a908a90612772565b90815260405190819003602001902081518190610fab9082612984565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083600381111561102857611028612428565b02179055506101408201516009820180546001600160a01b0390921661010002610100600160a81b03198316811782556101608501519260ff60a81b19909116610100600160b01b031990911617600160a81b83600181111561108d5761108d612428565b0217905550503360009081526004602090815260408220600190810180549182018155835291200190506110c2878983612a3e565b5060015460025460405133927f2c7b57ffa9ff86280c81f437c215c7efeb16c055c6ea6e9b892af17cb10f9bcf9261110f926001600160a01b0392831692909116908c908c904290612af9565b60405180910390a250505050505050565b611128611199565b6001600160a01b03811661118d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161086d565b6111968161161b565b50565b6000546001600160a01b031633146107265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161086d565b60005b6005548110156111965760006004600060058481548110611219576112196127bc565b60009182526020808320909101546001600160a01b0316835282019290925260400181206001810154909250905b81811015611605576000836001018281548110611266576112666127bc565b90600052602060002001805461127b90612782565b80601f01602080910402602001604051908101604052809291908181526020018280546112a790612782565b80156112f45780601f106112c9576101008083540402835291602001916112f4565b820191906000526020600020905b8154815290600101906020018083116112d757829003601f168201915b505050505090506000846000018260405161130f91906127d2565b90815260405190819003602001902090506000600982015460ff16600381111561133b5761133b612428565b14801561135a5750806002015481600501546113579190612804565b42115b156115f0576000816007015482600101546113759190612849565b9050808260040154111561140c5760098201805460ff1916600117905560058054889081106113a6576113a66127bc565b600091825260209091200154600180546002546040516001600160a01b03948516947f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f946113ff94821693909116918991904290612b38565b60405180910390a26115ee565b60098201805460ff19166003179055600482015460015460058054611462926001600160a01b031691908b908110611446576114466127bc565b6000918252602090912001546001600160a01b0316308461166b565b60006127106007548361147591906128d2565b61147f91906128e9565b9050600061148d8284612849565b905060006114b2828760090160019054906101000a90046001600160a01b0316611da8565b6001546001600160a01b03166000908152600660205260408120805492935085929091906114e1908490612804565b90915550600090506009870154600160a81b900460ff16600181111561150957611509612428565b036115295760018660030160008282546115239190612849565b90915550505b8086600801600082825461153d9190612804565b92505081905550838660070160008282546115589190612804565b909155505060098601805460ff191690554260058088019190915580547fb59d2884dc4704cee22474623144a36d0c59d281b8eb5a128761e0132569139391908d9081106115a8576115a86127bc565b6000918252602090912001546001546002546040516115e1936001600160a01b03908116938d93908216929116908a9088904290612b83565b60405180910390a1505050505b505b505080806115fd90612817565b915050611247565b505050808061161390612817565b9150506111f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526116d69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261202b565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561172d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117519190612830565b61175b9190612804565b6040516001600160a01b0385166024820152604481018290529091506116d690859063095ea7b360e01b9060640161169f565b3360009081526004602052604080822090516117ab9084906127d2565b908152602001604051809103902060060154116111965760405162461bcd60e51b8152602060048201526016602482015275141bdcda5d1a5bdb88191bd95cdb89dd08195e1a5cdd60521b604482015260640161086d565b6001600160a01b038316600090815260046020526040908190209051600291906118309085908590612772565b908152604051908190036020019020600901805460ff1916600183600381111561185c5761185c612428565b02179055506001600160a01b038316600090815260046020908152604082206003018054600181018255908352912001611897828483612a3e565b506001600160a01b0383166000908152600460205260409081902090516118c19084908490612772565b908152602001604051809103902060046000856001600160a01b03166001600160a01b031681526020019081526020016000206002018383604051611907929190612772565b908152604051908190036020019020806119218382612bd3565b5060018201548160010155600282015481600201556003820154816003015560048201548160040155600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908360038111156119a9576119a9612428565b02179055506009828101805491830180546001600160a01b036101009485900416909302610100600160a81b0319841681178255915460ff600160a81b918290041693919260ff60a81b1916610100600160b01b03199092169190911790836001811115611a1957611a19612428565b021790555050506001600160a01b038316600090815260046020526040908190209051611a499084908490612772565b9081526040519081900360200190206000611a6482826122ff565b50600060018281018290556002830182905560038301829055600480840183905560058401839055600684018390556007840183905560088401839055600990930180546001600160b01b03191690556001600160a01b03861682526020929092526040812090910154905b81811015611ce2576001600160a01b0385166000908152600460205260408120600101805483908110611b0557611b056127bc565b906000526020600020018054611b1a90612782565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4690612782565b8015611b935780601f10611b6857610100808354040283529160200191611b93565b820191906000526020600020905b815481529060010190602001808311611b7657829003601f168201915b5050505050905080604051602001611bab91906127d2565b604051602081830303815290604052805190602001208585604051602001611bd4929190612772565b6040516020818303038152906040528051906020012003611ccf576001600160a01b0386166000908152600460205260409020600190810190611c179085612849565b81548110611c2757611c276127bc565b9060005260206000200160046000886001600160a01b03166001600160a01b031681526020019081526020016000206001018381548110611c6a57611c6a6127bc565b906000526020600020019081611c809190612bd3565b506001600160a01b0386166000908152600460205260409020600101805480611cab57611cab612ca0565b600190038181906000526020600020016000611cc791906122ff565b905550611ce2565b5080611cda81612817565b915050611ad0565b50600154600280546040516001600160a01b03888116947f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f94610c4d94918316939290911691899189914290612885565b6040516001600160a01b03831660248201526044810182905261095990849063a9059cbb60e01b9060640161169f565b6001600160a01b0381166000908152600460205260408120600101541515806103fa5750506001600160a01b0316600090815260046020526040902060030154151590565b6001546040516370a0823160e01b815230600482015260009184916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e199190612830565b11611e725760405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e742062616c616e6365206f66206f726967696e205460448201526337b5b2b760e11b606482015260840161086d565b60015460035460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015611ec7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eeb9190612cb6565b5060408051610100810182526001546001600160a01b03908116825260025481166020830152610bb892820192909252908316606082015260009060808101611f3642610708612804565b81526020810186905260006040820181905260609091015290508315612021576003546040805163414bf38960e01b815283516001600160a01b0390811660048301526020850151811660248301529184015162ffffff1660448201526060840151821660648201526080840151608482015260a084015160a482015260c084015160c482015260e0840151821660e482015291169063414bf38990610104016020604051808303816000875af1158015611ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120199190612830565b9150506103fa565b60009150506103fa565b6000612080826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120fd9092919063ffffffff16565b805190915015610959578080602001905181019061209e9190612cb6565b6109595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161086d565b606061210c8484600085612114565b949350505050565b6060824710156121755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161086d565b600080866001600160a01b0316858760405161219191906127d2565b60006040518083038185875af1925050503d80600081146121ce576040519150601f19603f3d011682016040523d82523d6000602084013e6121d3565b606091505b50915091506121e4878383876121ef565b979650505050505050565b6060831561225e578251600003612257576001600160a01b0385163b6122575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086d565b508161210c565b61210c83838151156122735781518083602001fd5b8060405162461bcd60e51b815260040161086d9190612cd8565b604051806101800160405280606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156122eb576122eb612428565b815260006020820181905260409091015290565b50805461230b90612782565b6000825580601f1061231b575050565b601f01602090049060005260206000209081019061119691905b808211156123495760008155600101612335565b5090565b60008083601f84011261235f57600080fd5b50813567ffffffffffffffff81111561237757600080fd5b60208301915083602082850101111561238f57600080fd5b9250929050565b600080602083850312156123a957600080fd5b823567ffffffffffffffff8111156123c057600080fd5b6123cc8582860161234d565b90969095509350505050565b60005b838110156123f35781810151838201526020016123db565b50506000910152565b600081518084526124148160208601602086016123d8565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061244e5761244e612428565b9052565b6002811061244e5761244e612428565b60006101808251818552612478828601826123fc565b9150506020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401516124e08287018261243e565b5050610140838101516001600160a01b0316908501526101608084015161250982870182612452565b5090949350505050565b6020815260006125266020830184612462565b9392505050565b80356001600160a01b03811681146106e757600080fd5b60006020828403121561255657600080fd5b6125268261252d565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125b457603f198886030184526125a2858351612462565b94509285019290850190600101612586565b5092979650505050505050565b6000602082840312156125d357600080fd5b5035919050565b600080600080600080600060c0888a0312156125f557600080fd5b6125fe8861252d565b965061260c6020890161252d565b9550604088013594506126216060890161252d565b935061262f6080890161252d565b925060a088013567ffffffffffffffff81111561264b57600080fd5b6126578a828b0161234d565b989b979a50959850939692959293505050565b6000806000806080858703121561268057600080fd5b6126898561252d565b93506126976020860161252d565b92506126a56040860161252d565b9396929550929360600135925050565b6000806000604084860312156126ca57600080fd5b833567ffffffffffffffff8111156126e157600080fd5b6126ed8682870161234d565b90945092505060208401356004811061270557600080fd5b809150509250925092565b60008060008060008060a0878903121561272957600080fd5b863567ffffffffffffffff81111561274057600080fd5b61274c89828a0161234d565b909a90995060208901359860408101359850606081013597506080013595509350505050565b8183823760009101908152919050565b600181811c9082168061279657607f821691505b6020821081036127b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516127e48184602087016123d8565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103fa576103fa6127ee565b600060018201612829576128296127ee565b5060010190565b60006020828403121561284257600080fd5b5051919050565b818103818111156103fa576103fa6127ee565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0387811682528616602082015260a0604082018190526000906128b2908301868861285c565b90506128c1606083018561243e565b826080830152979650505050505050565b80820281158282048414176103fa576103fa6127ee565b60008261290657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b601f82111561095957600081815260208120601f850160051c810160208610156129485750805b601f850160051c820191505b8181101561296757828155600101612954565b505050505050565b600019600383901b1c191660019190911b1790565b815167ffffffffffffffff81111561299e5761299e61290b565b6129b2816129ac8454612782565b84612921565b602080601f8311600181146129e157600084156129cf5750858301515b6129d9858261296f565b865550612967565b600085815260208120601f198616915b82811015612a10578886015182559484019460019091019084016129f1565b5085821015612a2e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff831115612a5657612a5661290b565b612a6a83612a648354612782565b83612921565b6000601f841160018114612a985760008515612a865750838201355b612a90868261296f565b845550612af2565b600083815260209020601f19861690835b82811015612ac95786850135825560209485019460019092019101612aa9565b5086821015612ae65760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160a01b03868116825285166020820152608060408201819052600090612b26908301858761285c565b90508260608301529695505050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090612b64908301866123fc565b9050612b73606083018561243e565b8260808301529695505050505050565b600060018060a01b03808a16835260e06020840152612ba560e084018a6123fc565b9781166040840152959095166060820152608081019390935260a083019190915260c0909101525092915050565b818103612bde575050565b612be88254612782565b67ffffffffffffffff811115612c0057612c0061290b565b612c0e816129ac8454612782565b6000601f821160018114612c3c5760008315612c2a5750848201545b612c34848261296f565b855550612af2565b600085815260209020601f19841690600086815260209020845b83811015612c765782860154825560019586019590910190602001612c56565b5085831015612a2e5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b600060208284031215612cc857600080fd5b8151801515811461252657600080fd5b60208152600061252660208301846123fc56fea26469706673582212204334d269b4310aa6f9d49818ec9da1a1b3c0ef52a652320a20e4fda5ecb9417864736f6c63430008120033a2646970667358221220d90eb58a77bea40c0e827ba0e4d3da8eedcbc5a0a1015bc80068bd94d82fb16964736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100925760003560e01c806392c4b2891161006657806392c4b2891461010357806394ea338714610116578063af236af41461014a578063de55dbbc14610152578063f2fde38b1461015a57600080fd5b80627fedfe146100975780635145b2b4146100bd578063715018a6146100e85780638da5cb5b146100f2575b600080fd5b6100aa6100a53660046107eb565b61016d565b6040519081526020015b60405180910390f35b6100d06100cb36600461083f565b610204565b6040516001600160a01b0390911681526020016100b4565b6100f06103ad565b005b6000546001600160a01b03166100d0565b6100f06101113660046107eb565b6103c1565b6100d06101243660046107eb565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6100aa610443565b6100f0610533565b6100f06101683660046108b6565b610613565b6000610177610691565b60018260405161018791906108fc565b90815260408051602092819003830181205463d294f09360e01b825291516001600160a01b039092169263d294f0939260048084019382900301816000875af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610918565b90505b919050565b600061020e610691565b60008660405160200161022191906108fc565b60405160208183030381529060405280519060200120905060006040518060200161024b9061073b565b6020820181038252601f19601f820116604052509050818151602083016000f59250823b61027857600080fd5b60405163cf756fdf60e01b81526001600160a01b038881166004830152878116602483015286811660448301526064820186905284169063cf756fdf90608401600060405180830381600087803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b50505050826001896040516102fb91906108fc565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0161036689826109ba565b507fba2ffa1886908ded7f5c34a05cf9ddb538ac0a72200e97db4b78757b710da55388844260405161039a93929190610a7a565b60405180910390a1505095945050505050565b6103b5610691565b6103bf60006106eb565b565b6103c9610691565b6001816040516103d991906108fc565b9081526040805191829003602001822054630599f58160e41b835290516001600160a01b039091169163599f581091600480830192600092919082900301818387803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505050565b600061044d610691565b60025460005b8181101561052e5760006002828154811061047057610470610ac5565b90600052602060002001805461048590610931565b80601f01602080910402602001604051908101604052809291908181526020018280546104b190610931565b80156104fe5780601f106104d3576101008083540402835291602001916104fe565b820191906000526020600020905b8154815290600101906020018083116104e157829003601f168201915b5050505050905061050e8161016d565b6105189085610af1565b935050808061052690610b0a565b915050610453565b505090565b61053b610691565b60025460005b8181101561060f5760006002828154811061055e5761055e610ac5565b90600052602060002001805461057390610931565b80601f016020809104026020016040519081016040528092919081815260200182805461059f90610931565b80156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b505050505090506105fc816103c1565b508061060781610b0a565b915050610541565b5050565b61061b610691565b6001600160a01b0381166106855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61068e816106eb565b50565b6000546001600160a01b031633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612da080610b2483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261076f57600080fd5b813567ffffffffffffffff8082111561078a5761078a610748565b604051601f8301601f19908116603f011681019082821181831017156107b2576107b2610748565b816040528381528660208588010111156107cb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156107fd57600080fd5b813567ffffffffffffffff81111561081457600080fd5b6108208482850161075e565b949350505050565b80356001600160a01b03811681146101ff57600080fd5b600080600080600060a0868803121561085757600080fd5b853567ffffffffffffffff81111561086e57600080fd5b61087a8882890161075e565b95505061088960208701610828565b935061089760408701610828565b92506108a560608701610828565b949793965091946080013592915050565b6000602082840312156108c857600080fd5b6108d182610828565b9392505050565b60005b838110156108f35781810151838201526020016108db565b50506000910152565b6000825161090e8184602087016108d8565b9190910192915050565b60006020828403121561092a57600080fd5b5051919050565b600181811c9082168061094557607f821691505b60208210810361096557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109b557600081815260208120601f850160051c810160208610156109925750805b601f850160051c820191505b818110156109b15782815560010161099e565b5050505b505050565b815167ffffffffffffffff8111156109d4576109d4610748565b6109e8816109e28454610931565b8461096b565b602080601f831160018114610a1d5760008415610a055750858301515b600019600386901b1c1916600185901b1785556109b1565b600085815260208120601f198616915b82811015610a4c57888601518255948401946001909101908401610a2d565b5085821015610a6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260008451806060840152610a998160808501602089016108d8565b6001600160a01b039490941660208301525060408101919091526080601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b0457610b04610adb565b92915050565b600060018201610b1c57610b1c610adb565b506001019056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612d21806200007f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806399b240ac11610097578063d294f09311610066578063d294f09314610212578063d2ad50031461021a578063d816b2041461022d578063f2fde38b1461024057600080fd5b806399b240ac146101c65780639c89bb3d146101d9578063c6ac4339146101ec578063cf756fdf146101ff57600080fd5b8063599f5810116100d3578063599f581014610190578063715018a61461019a5780638204b199146101a25780638da5cb5b146101b557600080fd5b806310fb6fc11461010557806316aab88f1461012e578063502c9bd51461014e57806354cf2aeb14610179575b600080fd5b610118610113366004612396565b610253565b6040516101259190612513565b60405180910390f35b61014161013c366004612544565b610400565b604051610125919061255f565b61016161015c3660046125c1565b6106ec565b6040516001600160a01b039091168152602001610125565b61018260075481565b604051908152602001610125565b610198610716565b005b610198610728565b600a54610161906001600160a01b031681565b6000546001600160a01b0316610161565b6101986101d43660046125da565b61073a565b6101986101e7366004612396565b61090c565b600b54610161906001600160a01b031681565b61019861020d36600461266a565b61095e565b610182610a4c565b6101986102283660046126b5565b610b6a565b61019861023b366004612710565b610c5b565b61019861024e366004612544565b611120565b61025b61228d565b3360009081526004602052604090819020905161027b9085908590612772565b9081526020016040518091039020604051806101800160405290816000820180546102a590612782565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190612782565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b50505091835250506001820154602082015260028201546040820152600380830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101209092019160ff169081111561039757610397612428565b60038111156103a8576103a8612428565b8152600982015461010081046001600160a01b03166020830152604090910190600160a81b900460ff1660018111156103e3576103e3612428565b60018111156103f4576103f4612428565b90525090505b92915050565b606061040a611199565b6001600160a01b0382166000908152600460205260408120600181015490916060905b828110156106e157600084600101828154811061044c5761044c6127bc565b90600052602060002001805461046190612782565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90612782565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b50505050509050600085600001826040516104f591906127d2565b90815260405190819003602001902090506000600982015460ff16600381111561052157610521612428565b14801561054057508060020154816005015461053d9190612804565b42115b156106cc57806040518061018001604052908160008201805461056290612782565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90612782565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b50505091835250506001820154602082015260028201546040820152600380830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e0830152600883015461010083015260098301546101209092019160ff169081111561065457610654612428565b600381111561066557610665612428565b8152600982015461010081046001600160a01b03166020830152604090910190600160a81b900460ff1660018111156106a0576106a0612428565b60018111156106b1576106b1612428565b905250845185906106c06127bc565b60200260200101819052505b505080806106d990612817565b91505061042d565b50925050505b919050565b600581815481106106fc57600080fd5b6000918252602090912001546001600160a01b0316905081565b61071e611199565b6107266111f3565b565b610730611199565b610726600061161b565b6107468688308861166b565b600a5461075e9087906001600160a01b0316876116dc565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612830565b600b546040519192506000916001600160a01b03909116906107ee9086908690612772565b6000604051808303816000865af19150503d806000811461082b576040519150601f19603f3d011682016040523d82523d6000602084013e610830565b606091505b50509050806108765760405162461bcd60e51b815260206004820152600d60248201526c4661696c6564206174206f6e6560981b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190612830565b905082811115610900576109008730886108fb8786612849565b61166b565b50505050505050505050565b81818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061094e925083915061178e9050565b610959338484611803565b505050565b6001546001600160a01b0316156109c55760405162461bcd60e51b815260206004820152602560248201527f436f6e74726163742068617320616c7265616479206265656e20696e697469616044820152641b1a5e995960da1b606482015260840161086d565b600180546001600160a01b039586166001600160a01b0319918216179091556002805494861694821694909417909355600380549290941691831691909117909255600791909155600a8054821673216b4b4ba9f3e719726886d34a177484278bfcae179055600b805490911673def171fe48cf0115b1d80b88dc8eab59176fee57179055565b6000610a56611199565b506001546001600160a01b0316600081815260066020526040908190205490516370a0823160e01b8152306004820152909182916370a0823190602401602060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190612830565b10610b0e57600154610af0906001600160a01b03163383611d33565b6001546001600160a01b031660009081526006602052604081205590565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f2073756666696369656e742066756e6473206f6e20636f6e74726163742060448201526a746f20676574206665657360a81b606482015260840161086d565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bac925083915061178e9050565b33600090815260046020526040908190209051839190610bcf9087908790612772565b908152604051908190036020019020600901805460ff19166001836003811115610bfb57610bfb612428565b02179055506001805460025460405133937f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f93610c4d936001600160a01b03918216939116918a918a91904290612885565b60405180910390a250505050565b84610c9b5760405162461bcd60e51b815260206004820152601060248201526f1b985b59481b5d5cdd081899481cd95d60821b604482015260640161086d565b33600090815260046020526040908190209051610cbb9088908890612772565b908152602001604051809103902060060154600014610d1c5760405162461bcd60e51b815260206004820152601c60248201527f506f736974696f6e20697320616c7265616479206578697374696e6700000000604482015260640161086d565b6003831015610d6d5760405162461bcd60e51b815260206004820152601c60248201527f7468697320696e74657276616c206973206e6f7420616c6c6f77656400000000604482015260640161086d565b60008411610db55760405162461bcd60e51b81526020600482015260156024820152744e6f20616d6f756e742073657420666f722044434160581b604482015260640161086d565b81158015610dc257508015155b80610dd557508115801590610dd5575080155b610e3a5760405162461bcd60e51b815260206004820152603060248201527f536574206f6e6c7920616d6f756e74207065722073776170206f72206e756d6260448201526f6572206f6620697465726174696f6e7360801b606482015260840161086d565b6000808311610e6a5761271082610e5187836128d2565b610e5b91906128e9565b610e6591906128e9565b610e6c565b825b9050610e7733611d63565b610ebe57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b60405180610180016040528088888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602082018890526040820187905260608201859052608082018490524260a0830181905260c083015260e08201819052610100820181905261012082015233610140820152610160018315610f58576000610f5b565b60015b6001811115610f6c57610f6c612428565b905233600090815260046020526040908190209051610f8e908a908a90612772565b90815260405190819003602001902081518190610fab9082612984565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083600381111561102857611028612428565b02179055506101408201516009820180546001600160a01b0390921661010002610100600160a81b03198316811782556101608501519260ff60a81b19909116610100600160b01b031990911617600160a81b83600181111561108d5761108d612428565b0217905550503360009081526004602090815260408220600190810180549182018155835291200190506110c2878983612a3e565b5060015460025460405133927f2c7b57ffa9ff86280c81f437c215c7efeb16c055c6ea6e9b892af17cb10f9bcf9261110f926001600160a01b0392831692909116908c908c904290612af9565b60405180910390a250505050505050565b611128611199565b6001600160a01b03811661118d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161086d565b6111968161161b565b50565b6000546001600160a01b031633146107265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161086d565b60005b6005548110156111965760006004600060058481548110611219576112196127bc565b60009182526020808320909101546001600160a01b0316835282019290925260400181206001810154909250905b81811015611605576000836001018281548110611266576112666127bc565b90600052602060002001805461127b90612782565b80601f01602080910402602001604051908101604052809291908181526020018280546112a790612782565b80156112f45780601f106112c9576101008083540402835291602001916112f4565b820191906000526020600020905b8154815290600101906020018083116112d757829003601f168201915b505050505090506000846000018260405161130f91906127d2565b90815260405190819003602001902090506000600982015460ff16600381111561133b5761133b612428565b14801561135a5750806002015481600501546113579190612804565b42115b156115f0576000816007015482600101546113759190612849565b9050808260040154111561140c5760098201805460ff1916600117905560058054889081106113a6576113a66127bc565b600091825260209091200154600180546002546040516001600160a01b03948516947f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f946113ff94821693909116918991904290612b38565b60405180910390a26115ee565b60098201805460ff19166003179055600482015460015460058054611462926001600160a01b031691908b908110611446576114466127bc565b6000918252602090912001546001600160a01b0316308461166b565b60006127106007548361147591906128d2565b61147f91906128e9565b9050600061148d8284612849565b905060006114b2828760090160019054906101000a90046001600160a01b0316611da8565b6001546001600160a01b03166000908152600660205260408120805492935085929091906114e1908490612804565b90915550600090506009870154600160a81b900460ff16600181111561150957611509612428565b036115295760018660030160008282546115239190612849565b90915550505b8086600801600082825461153d9190612804565b92505081905550838660070160008282546115589190612804565b909155505060098601805460ff191690554260058088019190915580547fb59d2884dc4704cee22474623144a36d0c59d281b8eb5a128761e0132569139391908d9081106115a8576115a86127bc565b6000918252602090912001546001546002546040516115e1936001600160a01b03908116938d93908216929116908a9088904290612b83565b60405180910390a1505050505b505b505080806115fd90612817565b915050611247565b505050808061161390612817565b9150506111f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526116d69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261202b565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561172d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117519190612830565b61175b9190612804565b6040516001600160a01b0385166024820152604481018290529091506116d690859063095ea7b360e01b9060640161169f565b3360009081526004602052604080822090516117ab9084906127d2565b908152602001604051809103902060060154116111965760405162461bcd60e51b8152602060048201526016602482015275141bdcda5d1a5bdb88191bd95cdb89dd08195e1a5cdd60521b604482015260640161086d565b6001600160a01b038316600090815260046020526040908190209051600291906118309085908590612772565b908152604051908190036020019020600901805460ff1916600183600381111561185c5761185c612428565b02179055506001600160a01b038316600090815260046020908152604082206003018054600181018255908352912001611897828483612a3e565b506001600160a01b0383166000908152600460205260409081902090516118c19084908490612772565b908152602001604051809103902060046000856001600160a01b03166001600160a01b031681526020019081526020016000206002018383604051611907929190612772565b908152604051908190036020019020806119218382612bd3565b5060018201548160010155600282015481600201556003820154816003015560048201548160040155600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908360038111156119a9576119a9612428565b02179055506009828101805491830180546001600160a01b036101009485900416909302610100600160a81b0319841681178255915460ff600160a81b918290041693919260ff60a81b1916610100600160b01b03199092169190911790836001811115611a1957611a19612428565b021790555050506001600160a01b038316600090815260046020526040908190209051611a499084908490612772565b9081526040519081900360200190206000611a6482826122ff565b50600060018281018290556002830182905560038301829055600480840183905560058401839055600684018390556007840183905560088401839055600990930180546001600160b01b03191690556001600160a01b03861682526020929092526040812090910154905b81811015611ce2576001600160a01b0385166000908152600460205260408120600101805483908110611b0557611b056127bc565b906000526020600020018054611b1a90612782565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4690612782565b8015611b935780601f10611b6857610100808354040283529160200191611b93565b820191906000526020600020905b815481529060010190602001808311611b7657829003601f168201915b5050505050905080604051602001611bab91906127d2565b604051602081830303815290604052805190602001208585604051602001611bd4929190612772565b6040516020818303038152906040528051906020012003611ccf576001600160a01b0386166000908152600460205260409020600190810190611c179085612849565b81548110611c2757611c276127bc565b9060005260206000200160046000886001600160a01b03166001600160a01b031681526020019081526020016000206001018381548110611c6a57611c6a6127bc565b906000526020600020019081611c809190612bd3565b506001600160a01b0386166000908152600460205260409020600101805480611cab57611cab612ca0565b600190038181906000526020600020016000611cc791906122ff565b905550611ce2565b5080611cda81612817565b915050611ad0565b50600154600280546040516001600160a01b03888116947f0aeed090124458b07ced6994263a843236db56546c55434529a62a575818833f94610c4d94918316939290911691899189914290612885565b6040516001600160a01b03831660248201526044810182905261095990849063a9059cbb60e01b9060640161169f565b6001600160a01b0381166000908152600460205260408120600101541515806103fa5750506001600160a01b0316600090815260046020526040902060030154151590565b6001546040516370a0823160e01b815230600482015260009184916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e199190612830565b11611e725760405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e742062616c616e6365206f66206f726967696e205460448201526337b5b2b760e11b606482015260840161086d565b60015460035460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015611ec7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eeb9190612cb6565b5060408051610100810182526001546001600160a01b03908116825260025481166020830152610bb892820192909252908316606082015260009060808101611f3642610708612804565b81526020810186905260006040820181905260609091015290508315612021576003546040805163414bf38960e01b815283516001600160a01b0390811660048301526020850151811660248301529184015162ffffff1660448201526060840151821660648201526080840151608482015260a084015160a482015260c084015160c482015260e0840151821660e482015291169063414bf38990610104016020604051808303816000875af1158015611ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120199190612830565b9150506103fa565b60009150506103fa565b6000612080826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120fd9092919063ffffffff16565b805190915015610959578080602001905181019061209e9190612cb6565b6109595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161086d565b606061210c8484600085612114565b949350505050565b6060824710156121755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161086d565b600080866001600160a01b0316858760405161219191906127d2565b60006040518083038185875af1925050503d80600081146121ce576040519150601f19603f3d011682016040523d82523d6000602084013e6121d3565b606091505b50915091506121e4878383876121ef565b979650505050505050565b6060831561225e578251600003612257576001600160a01b0385163b6122575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086d565b508161210c565b61210c83838151156122735781518083602001fd5b8060405162461bcd60e51b815260040161086d9190612cd8565b604051806101800160405280606081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156122eb576122eb612428565b815260006020820181905260409091015290565b50805461230b90612782565b6000825580601f1061231b575050565b601f01602090049060005260206000209081019061119691905b808211156123495760008155600101612335565b5090565b60008083601f84011261235f57600080fd5b50813567ffffffffffffffff81111561237757600080fd5b60208301915083602082850101111561238f57600080fd5b9250929050565b600080602083850312156123a957600080fd5b823567ffffffffffffffff8111156123c057600080fd5b6123cc8582860161234d565b90969095509350505050565b60005b838110156123f35781810151838201526020016123db565b50506000910152565b600081518084526124148160208601602086016123d8565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6004811061244e5761244e612428565b9052565b6002811061244e5761244e612428565b60006101808251818552612478828601826123fc565b9150506020830151602085015260408301516040850152606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401516124e08287018261243e565b5050610140838101516001600160a01b0316908501526101608084015161250982870182612452565b5090949350505050565b6020815260006125266020830184612462565b9392505050565b80356001600160a01b03811681146106e757600080fd5b60006020828403121561255657600080fd5b6125268261252d565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125b457603f198886030184526125a2858351612462565b94509285019290850190600101612586565b5092979650505050505050565b6000602082840312156125d357600080fd5b5035919050565b600080600080600080600060c0888a0312156125f557600080fd5b6125fe8861252d565b965061260c6020890161252d565b9550604088013594506126216060890161252d565b935061262f6080890161252d565b925060a088013567ffffffffffffffff81111561264b57600080fd5b6126578a828b0161234d565b989b979a50959850939692959293505050565b6000806000806080858703121561268057600080fd5b6126898561252d565b93506126976020860161252d565b92506126a56040860161252d565b9396929550929360600135925050565b6000806000604084860312156126ca57600080fd5b833567ffffffffffffffff8111156126e157600080fd5b6126ed8682870161234d565b90945092505060208401356004811061270557600080fd5b809150509250925092565b60008060008060008060a0878903121561272957600080fd5b863567ffffffffffffffff81111561274057600080fd5b61274c89828a0161234d565b909a90995060208901359860408101359850606081013597506080013595509350505050565b8183823760009101908152919050565b600181811c9082168061279657607f821691505b6020821081036127b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516127e48184602087016123d8565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103fa576103fa6127ee565b600060018201612829576128296127ee565b5060010190565b60006020828403121561284257600080fd5b5051919050565b818103818111156103fa576103fa6127ee565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0387811682528616602082015260a0604082018190526000906128b2908301868861285c565b90506128c1606083018561243e565b826080830152979650505050505050565b80820281158282048414176103fa576103fa6127ee565b60008261290657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b601f82111561095957600081815260208120601f850160051c810160208610156129485750805b601f850160051c820191505b8181101561296757828155600101612954565b505050505050565b600019600383901b1c191660019190911b1790565b815167ffffffffffffffff81111561299e5761299e61290b565b6129b2816129ac8454612782565b84612921565b602080601f8311600181146129e157600084156129cf5750858301515b6129d9858261296f565b865550612967565b600085815260208120601f198616915b82811015612a10578886015182559484019460019091019084016129f1565b5085821015612a2e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff831115612a5657612a5661290b565b612a6a83612a648354612782565b83612921565b6000601f841160018114612a985760008515612a865750838201355b612a90868261296f565b845550612af2565b600083815260209020601f19861690835b82811015612ac95786850135825560209485019460019092019101612aa9565b5086821015612ae65760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160a01b03868116825285166020820152608060408201819052600090612b26908301858761285c565b90508260608301529695505050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090612b64908301866123fc565b9050612b73606083018561243e565b8260808301529695505050505050565b600060018060a01b03808a16835260e06020840152612ba560e084018a6123fc565b9781166040840152959095166060820152608081019390935260a083019190915260c0909101525092915050565b818103612bde575050565b612be88254612782565b67ffffffffffffffff811115612c0057612c0061290b565b612c0e816129ac8454612782565b6000601f821160018114612c3c5760008315612c2a5750848201545b612c34848261296f565b855550612af2565b600085815260209020601f19841690600086815260209020845b83811015612c765782860154825560019586019590910190602001612c56565b5085831015612a2e5793015460001960f8600387901b161c19169092555050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b600060208284031215612cc857600080fd5b8151801515811461252657600080fd5b60208152600061252660208301846123fc56fea26469706673582212204334d269b4310aa6f9d49818ec9da1a1b3c0ef52a652320a20e4fda5ecb9417864736f6c63430008120033a2646970667358221220d90eb58a77bea40c0e827ba0e4d3da8eedcbc5a0a1015bc80068bd94d82fb16964736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8237:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:12",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:12"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "199:666:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "248:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "260:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "250:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "250:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "250:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "227:6:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "235:4:12",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "223:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "223:17:12"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "242:3:12"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "219:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "219:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "212:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "209:55:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "273:30:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "296:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "283:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "283:20:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "277:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "312:28:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "322:18:12",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "316:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "363:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "365:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "365:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "365:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "355:2:12"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "359:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "352:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:10:12"
                  },
                  "nodeType": "YulIf",
                  "src": "349:36:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "394:17:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "408:2:12",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "404:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:7:12"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "398:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "420:23:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "434:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:9:12"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "424:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:71:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "474:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "498:2:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "502:4:12",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "494:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "494:13:12"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "509:2:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "490:22:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "514:2:12",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "486:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "486:31:12"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "519:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "482:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:40:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "470:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:53:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "456:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "584:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "584:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "584:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "541:10:12"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "553:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "538:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "538:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "561:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "573:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "558:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "535:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:46:12"
                  },
                  "nodeType": "YulIf",
                  "src": "532:72:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "620:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "624:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "651:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "659:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "644:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:18:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "644:18:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "710:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "719:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "712:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "712:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "712:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "685:6:12"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "693:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "681:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "681:15:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "698:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "677:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "677:26:12"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "705:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "674:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "671:55:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "752:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "760:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "748:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "748:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "779:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "767:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:17:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "786:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "735:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "735:54:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "813:6:12"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "821:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "809:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "809:15:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:26:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "798:37:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "844:15:12",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "853:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "844:5:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "173:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "181:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "189:5:12",
                "type": ""
              }
            ],
            "src": "146:719:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "950:242:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "996:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1005:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1008:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "998:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "998:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "998:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "971:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "980:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "967:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "967:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "992:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "963:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "963:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "960:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1021:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1048:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1035:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:23:12"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1025:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1101:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1110:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1103:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1103:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1103:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1073:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1081:18:12",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1070:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:30:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1067:50:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1126:60:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1158:9:12"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1169:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1154:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:22:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1178:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1136:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1136:50:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1126:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "916:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "927:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "939:6:12",
                "type": ""
              }
            ],
            "src": "870:322:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1298:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1308:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1320:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1331:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1316:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1308:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1350:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1361:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1267:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1278:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1289:4:12",
                "type": ""
              }
            ],
            "src": "1197:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1428:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1438:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1460:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1447:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1438:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1530:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1539:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1532:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1532:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1532:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1489:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1500:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1515:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1520:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1511:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1511:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1524:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1507:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1507:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1496:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1496:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1486:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1486:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1479:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1476:70:12"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1407:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1418:5:12",
                "type": ""
              }
            ],
            "src": "1379:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1705:466:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1752:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1761:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1764:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1754:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1754:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1754:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1726:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1735:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1722:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1722:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1747:3:12",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1718:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:33:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1715:53:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1777:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1804:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1791:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1791:23:12"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1781:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1857:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1866:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1869:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1859:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1859:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1859:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1829:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1837:18:12",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1826:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:30:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1823:50:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1882:60:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1914:9:12"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1925:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1910:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1910:22:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1934:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1892:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:50:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1951:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1984:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1995:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1961:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1951:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2008:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2041:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2052:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2037:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2037:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2018:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2008:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2065:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2098:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2109:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2094:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2094:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2075:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2122:43:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2149:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:19:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2132:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:33:12"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2122:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1639:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1650:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1662:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1670:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1678:6:12",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1686:6:12",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1694:6:12",
                "type": ""
              }
            ],
            "src": "1557:614:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2277:102:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2287:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2299:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2310:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2295:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2295:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2287:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2329:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2344:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2360:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2365:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2356:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2356:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2369:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2352:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2352:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2340:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2340:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2322:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:51:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2322:51:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2246:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2257:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2268:4:12",
                "type": ""
              }
            ],
            "src": "2176:203:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2454:116:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2500:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2509:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2512:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2502:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2502:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2502:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2475:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2484:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2471:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2471:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2467:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2464:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2525:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2554:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2535:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2535:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2525:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2420:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2431:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2443:6:12",
                "type": ""
              }
            ],
            "src": "2384:186:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2641:184:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2651:10:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2660:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2655:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2720:63:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2745:3:12"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2750:1:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2741:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2741:11:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2764:3:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2769:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2760:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2760:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2754:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2754:18:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2734:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2734:39:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2734:39:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2681:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2684:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2678:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2692:19:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2694:15:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2703:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2706:2:12",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2699:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2699:10:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2694:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2674:3:12",
                    "statements": []
                  },
                  "src": "2670:113:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2803:3:12"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2808:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2799:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2799:16:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2817:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2792:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:27:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2792:27:12"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2619:3:12",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2624:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2629:6:12",
                "type": ""
              }
            ],
            "src": "2575:250:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2969:150:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2979:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2999:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2993:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2983:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3054:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3062:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3050:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3050:17:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3069:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3074:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3015:34:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:66:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3015:66:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3090:23:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3101:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3106:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3097:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3097:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3090:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2945:3:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2950:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2961:3:12",
                "type": ""
              }
            ],
            "src": "2830:289:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3205:103:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3251:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3260:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3263:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3253:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3253:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3253:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3226:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3235:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3222:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3222:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3247:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3218:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3218:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3215:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3276:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3292:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3286:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3276:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3171:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3182:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3194:6:12",
                "type": ""
              }
            ],
            "src": "3124:184:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3498:271:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3508:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3520:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3531:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3516:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3508:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3544:29:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3562:3:12",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3567:1:12",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3558:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3558:11:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3571:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3554:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3554:19:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3548:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3589:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3604:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3612:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3600:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3600:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3582:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3582:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3582:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3636:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3647:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3632:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3632:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3656:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3664:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3625:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3625:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3688:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3699:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3684:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3684:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3716:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3677:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3677:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3677:43:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3740:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3751:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3736:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3736:18:12"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3756:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3443:9:12",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3454:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3462:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3470:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3478:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3489:4:12",
                "type": ""
              }
            ],
            "src": "3313:456:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3829:325:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3839:22:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3853:1:12",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3856:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3849:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3849:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3839:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3870:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3900:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3906:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3896:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3896:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3874:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3947:31:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3949:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3963:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3971:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3959:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3959:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3949:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3927:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3920:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3917:61:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4037:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4058:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4065:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4070:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4061:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4061:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4051:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4051:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4051:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4102:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4105:4:12",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4095:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4095:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4095:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4130:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4133:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4123:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4123:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4123:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3993:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4016:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4024:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4013:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4013:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3990:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3987:161:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3809:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3818:6:12",
                "type": ""
              }
            ],
            "src": "3774:380:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4215:65:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4232:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "4235:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4225:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:14:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4225:14:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4248:26:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4266:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4269:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "4256:9:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4248:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "4198:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4206:4:12",
                "type": ""
              }
            ],
            "src": "4159:121:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4366:464:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4399:425:12",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4413:11:12",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4423:1:12",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "4417:2:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4444:2:12"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "4448:5:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4437:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4437:17:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4437:17:12"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4467:31:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4489:2:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4493:4:12",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "4479:9:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4479:19:12"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "4471:4:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4511:57:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "4534:4:12"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4544:1:12",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "4551:10:12"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4563:2:12",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4547:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4547:19:12"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "4540:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4540:27:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4530:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4530:38:12"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "4515:11:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4605:23:12",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4607:19:12",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "4622:4:12"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4607:11:12"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "4587:10:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4599:4:12",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "4584:2:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4584:20:12"
                        },
                        "nodeType": "YulIf",
                        "src": "4581:47:12"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4641:41:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "4655:4:12"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4665:1:12",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "4672:3:12"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4677:2:12",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4668:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4668:12:12"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "4661:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4661:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4651:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4651:31:12"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "4645:2:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4695:24:12",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "4708:11:12"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "4699:5:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4793:21:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4802:5:12"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4809:2:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4795:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4795:17:12"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4795:17:12"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "4743:5:12"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "4750:2:12"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "4740:2:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4740:13:12"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "4754:26:12",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4756:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "4769:5:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4776:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4765:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4765:13:12"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "4756:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "4736:3:12",
                          "statements": []
                        },
                        "src": "4732:82:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "4382:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4387:2:12",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4379:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4379:11:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4376:448:12"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "4338:5:12",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "4345:3:12",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "4350:10:12",
                "type": ""
              }
            ],
            "src": "4285:545:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4920:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4930:65:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "4945:4:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4963:1:12",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "4966:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4959:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4959:11:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4976:1:12",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4972:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4972:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4955:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4955:24:12"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4951:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4951:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4941:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:40:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4987:1:12",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "4990:3:12"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4983:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4983:11:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4938:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4938:57:12"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "4930:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4897:4:12",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "4903:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "4911:4:12",
                "type": ""
              }
            ],
            "src": "4835:166:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5102:1256:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5112:24:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "5132:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5126:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5126:10:12"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "5116:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5179:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5181:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5181:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5181:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "5151:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5159:18:12",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5148:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:30:12"
                  },
                  "nodeType": "YulIf",
                  "src": "5145:56:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "5254:4:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "5292:4:12"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "5286:5:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5286:11:12"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "5260:25:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5260:38:12"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "5300:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "5210:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:97:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5210:97:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5316:18:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5333:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "5320:9:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5343:23:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5362:4:12",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "5347:11:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5375:24:12",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "5388:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "5375:9:12"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5445:656:12",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5459:35:12",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5478:6:12"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5490:2:12",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5486:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5486:7:12"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5474:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5474:20:12"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "5463:7:12",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5507:49:12",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5551:4:12"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "5521:29:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5521:35:12"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "5511:6:12",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5569:10:12",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5578:1:12",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "5573:1:12",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5656:172:12",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5681:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "5699:3:12"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "5704:9:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5695:3:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5695:19:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5689:5:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5689:26:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5674:6:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5674:42:12"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5674:42:12"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5733:24:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5747:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5755:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5743:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5743:14:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5733:6:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5774:40:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5791:9:12"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5802:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5787:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5787:27:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "5774:9:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5603:1:12"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "5606:7:12"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5600:2:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5600:14:12"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "5615:28:12",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5617:24:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5626:1:12"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5629:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5622:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5622:19:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5617:1:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "5596:3:12",
                              "statements": []
                            },
                            "src": "5592:236:12"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5876:166:12",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5894:43:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5921:3:12"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5926:9:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5917:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5917:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5911:5:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5911:26:12"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "5898:9:12",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5961:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "5973:9:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "6000:1:12",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "6003:6:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5996:3:12"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "5996:14:12"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "6012:3:12",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5992:3:12"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5992:24:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "6022:1:12",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "6018:3:12"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "6018:6:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5988:3:12"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5988:37:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5984:3:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5984:42:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5969:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5969:58:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "5954:6:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5954:74:12"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5954:74:12"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "5847:7:12"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5856:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "5844:2:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5844:19:12"
                            },
                            "nodeType": "YulIf",
                            "src": "5841:201:12"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "6062:4:12"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6076:1:12",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "6079:6:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "6072:3:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6072:14:12"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6088:1:12",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6068:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6068:22:12"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "6055:6:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6055:36:12"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6055:36:12"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5438:663:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5443:1:12",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6118:234:12",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6132:14:12",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6145:1:12",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "6136:5:12",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6181:67:12",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6199:35:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "6218:3:12"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6223:9:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6214:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6214:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6208:5:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6208:26:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6199:5:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "6162:6:12"
                            },
                            "nodeType": "YulIf",
                            "src": "6159:89:12"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "6268:4:12"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6327:5:12"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "6334:6:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "6274:52:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6274:67:12"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "6261:6:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6261:81:12"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6261:81:12"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6110:242:12",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "5418:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5426:2:12",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5415:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5415:14:12"
                  },
                  "nodeType": "YulSwitch",
                  "src": "5408:944:12"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "5087:4:12",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5093:3:12",
                "type": ""
              }
            ],
            "src": "5006:1352:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6540:393:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6557:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6568:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6550:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6550:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6550:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6580:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6600:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6594:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6594:13:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6584:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6627:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6638:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6623:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6623:18:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6643:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6616:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6616:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6616:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6698:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6706:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6694:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6694:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6717:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6728:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6713:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6713:19:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6734:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "6659:34:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6659:82:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6659:82:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6750:63:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6766:9:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6785:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6793:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6781:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6781:15:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6802:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6798:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6798:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6777:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6777:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6762:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6762:45:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6809:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6758:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6758:55:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6750:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6833:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6844:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6829:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6829:20:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6855:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6871:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6876:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6867:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6867:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6880:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6863:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6863:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6851:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6822:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6822:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6822:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6904:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6915:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6900:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6900:18:12"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6920:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6893:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6893:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6493:9:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6504:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6512:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6520:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6531:4:12",
                "type": ""
              }
            ],
            "src": "6363:570:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6970:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6987:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6994:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6999:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6990:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6990:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6980:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6980:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7027:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7030:4:12",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7020:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7020:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7020:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7051:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7054:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7044:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7044:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7044:15:12"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6938:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7102:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7119:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7126:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7131:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7122:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7122:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7112:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7112:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7112:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7159:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7162:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7152:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7152:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7152:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7183:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7186:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7176:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7176:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7176:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7070:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7250:77:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7260:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7271:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7274:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7267:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7267:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7260:3:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7299:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7301:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7301:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7301:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7291:1:12"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "7294:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7288:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7288:10:12"
                  },
                  "nodeType": "YulIf",
                  "src": "7285:36:12"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7233:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7236:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7242:3:12",
                "type": ""
              }
            ],
            "src": "7202:125:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7379:88:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7410:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7412:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7412:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7412:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7395:5:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7406:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7402:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7402:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7392:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7392:17:12"
                  },
                  "nodeType": "YulIf",
                  "src": "7389:43:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7441:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7452:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7459:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7448:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7448:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7441:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7361:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7371:3:12",
                "type": ""
              }
            ],
            "src": "7332:135:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7646:228:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7663:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7674:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7656:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7656:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7656:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7697:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7708:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7693:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7693:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7713:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7686:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7686:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7686:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7736:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7747:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7732:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7732:18:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7752:34:12",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7725:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7725:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7725:62:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7807:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7818:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7803:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7803:18:12"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7823:8:12",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7796:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7796:36:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7796:36:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7841:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7853:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7864:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7849:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7849:19:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7841:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7623:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7637:4:12",
                "type": ""
              }
            ],
            "src": "7472:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8053:182:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8070:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8081:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8063:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8063:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8063:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8104:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8115:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8100:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8100:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8120:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8093:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8093:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8143:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8154:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8139:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8139:18:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8159:34:12",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8132:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8132:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8132:62:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8203:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8215:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8226:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8211:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8211:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8203:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8030:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8044:4:12",
                "type": ""
              }
            ],
            "src": "7879:356:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256__to_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let length := mload(value0)\n        mstore(add(headStart, 96), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(headStart, 128), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n        mstore(add(headStart, 0x20), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "450:3592:2:-:0;;;;;;;;;;;;-1:-1:-1;936:32:5;719:10:10;936:18:5;:32::i;:::-;450:3592:2;;2433:187:5;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;450:3592:2:-;;;;;;;",
  "deployedSourceMap": "450:3592:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:158;;;;;;:::i;:::-;;:::i;:::-;;;1343:25:12;;;1331:2;1316:18;2488:158:2;;;;;;;;1407:796;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2340:32:12;;;2322:51;;2310:2;2295:18;1407:796:2;2176:203:12;1831:101:5;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:5;1201:85;;3470:134:2;;;;;;:::i;:::-;;:::i;490:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;490:46:2;;;2904:324;;;:::i;3772:268::-;;;:::i;2081:198:5:-;;;;;;:::i;:::-;;:::i;2488:158:2:-;2564:7;1094:13:5;:11;:13::i;:::-;2600:12:2::1;2613;2600:26;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;;;2590:49:2;;;;-1:-1:-1;;;;;2600:26:2;;::::1;::::0;2590:47:::1;::::0;:49:::1;::::0;;::::1;::::0;;;;;;2600:26:::1;::::0;2590:49:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2583:56;;1117:1:5;2488:158:2::0;;;:::o;1407:796::-;1602:19;1094:13:5;:11;:13::i;:::-;1633:12:2::1;1675:5;1658:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1648:34;;;;;;1633:49;;1692:21;1716:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1692:52;;1842:4;1831:8;1825:15;1818:4;1808:8;1804:19;1801:1;1793:54;1778:69;;1882:11;1870:24;1860:52;;1908:1;1905::::0;1898:12:::1;1860:52;1974:77;::::0;-1:-1:-1;;;1974:77:2;;-1:-1:-1;;;;;3600:15:12;;;1974:77:2::1;::::0;::::1;3582:34:12::0;3652:15;;;3632:18;;;3625:43;3704:15;;;3684:18;;;3677:43;3736:18;;;3729:34;;;1974:33:2;::::1;::::0;::::1;::::0;3516:19:12;;1974:77:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2084:11;2062:12;2075:5;2062:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:33;;-1:-1:-1;;;;;2062:33:2;;;::::1;-1:-1:-1::0;;;;;;2062:33:2;;::::1;::::0;;;::::1;::::0;;2105:17:::1;:29:::0;;2062:33;2105:29;::::1;::::0;;2062:19:::1;2105:29:::0;;;;;::::1;;2128:5:::0;2105:29;::::1;:::i;:::-;;2149:47;2160:5;2167:11;2180:15;2149:47;;;;;;;;:::i;:::-;;;;;;;;1623:580;;1407:796:::0;;;;;;;:::o;1831:101:5:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3470:134:2:-;1094:13:5;:11;:13::i;:::-;3556:12:2::1;3569;3556:26;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;-1:-1:-1;;;3546:51:2;;;;-1:-1:-1;;;;;3556:26:2;;::::1;::::0;3546:49:::1;::::0;:51:::1;::::0;;::::1;::::0;3556:26:::1;::::0;3546:51;;;;;;;3556:26;;3546:51;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3470:134:::0;:::o;2904:324::-;2959:17;1094:13:5;:11;:13::i;:::-;3017:17:2::1;:24:::0;2988:26:::1;3051:171;3075:18;3071:1;:22;3051:171;;;3114:18;3135:17;3153:1;3135:20;;;;;;;;:::i;:::-;;;;;;;;3114:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:18;3206:4;3193:12;:18::i;:::-;3181:30;::::0;:9;:30:::1;:::i;:::-;3169:42;;3100:122;3095:3;;;;;:::i;:::-;;;;3051:171;;;;2978:250;2904:324:::0;:::o;3772:268::-;1094:13:5;:11;:13::i;:::-;3854:17:2::1;:24:::0;3825:26:::1;3888:146;3912:18;3908:1;:22;3888:146;;;3951:18;3972:17;3990:1;3972:20;;;;;;;;:::i;:::-;;;;;;;;3951:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:17;4018:4;4006:11;:17::i;:::-;-1:-1:-1::0;3932:3:2;::::1;::::0;::::1;:::i;:::-;;;;3888:146;;;;3815:225;3772:268::o:0;2081:198:5:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:5;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:5;;7674:2:12;2161:73:5::1;::::0;::::1;7656:21:12::0;7713:2;7693:18;;;7686:30;7752:34;7732:18;;;7725:62;-1:-1:-1;;;7803:18:12;;;7796:36;7849:19;;2161:73:5::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:5;719:10:10;1422:23:5;1414:68;;;;-1:-1:-1;;;1414:68:5;;8081:2:12;1414:68:5;;;8063:21:12;;;8100:18;;;8093:30;8159:34;8139:18;;;8132:62;8211:18;;1414:68:5;7879:356:12;2433:187:5;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:5;;;-1:-1:-1;;;;;;2541:17:5;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:12;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:322::-;939:6;992:2;980:9;971:7;967:23;963:32;960:52;;;1008:1;1005;998:12;960:52;1048:9;1035:23;1081:18;1073:6;1070:30;1067:50;;;1113:1;1110;1103:12;1067:50;1136;1178:7;1169:6;1158:9;1154:22;1136:50;:::i;:::-;1126:60;870:322;-1:-1:-1;;;;870:322:12:o;1379:173::-;1447:20;;-1:-1:-1;;;;;1496:31:12;;1486:42;;1476:70;;1542:1;1539;1532:12;1557:614;1662:6;1670;1678;1686;1694;1747:3;1735:9;1726:7;1722:23;1718:33;1715:53;;;1764:1;1761;1754:12;1715:53;1804:9;1791:23;1837:18;1829:6;1826:30;1823:50;;;1869:1;1866;1859:12;1823:50;1892;1934:7;1925:6;1914:9;1910:22;1892:50;:::i;:::-;1882:60;;;1961:38;1995:2;1984:9;1980:18;1961:38;:::i;:::-;1951:48;;2018:38;2052:2;2041:9;2037:18;2018:38;:::i;:::-;2008:48;;2075:38;2109:2;2098:9;2094:18;2075:38;:::i;:::-;1557:614;;;;-1:-1:-1;1557:614:12;;2160:3;2145:19;2132:33;;1557:614;-1:-1:-1;;1557:614:12:o;2384:186::-;2443:6;2496:2;2484:9;2475:7;2471:23;2467:32;2464:52;;;2512:1;2509;2502:12;2464:52;2535:29;2554:9;2535:29;:::i;:::-;2525:39;2384:186;-1:-1:-1;;;2384:186:12:o;2575:250::-;2660:1;2670:113;2684:6;2681:1;2678:13;2670:113;;;2760:11;;;2754:18;2741:11;;;2734:39;2706:2;2699:10;2670:113;;;-1:-1:-1;;2817:1:12;2799:16;;2792:27;2575:250::o;2830:289::-;2961:3;2999:6;2993:13;3015:66;3074:6;3069:3;3062:4;3054:6;3050:17;3015:66;:::i;:::-;3097:16;;;;;2830:289;-1:-1:-1;;2830:289:12:o;3124:184::-;3194:6;3247:2;3235:9;3226:7;3222:23;3218:32;3215:52;;;3263:1;3260;3253:12;3215:52;-1:-1:-1;3286:16:12;;3124:184;-1:-1:-1;3124:184:12:o;3774:380::-;3853:1;3849:12;;;;3896;;;3917:61;;3971:4;3963:6;3959:17;3949:27;;3917:61;4024:2;4016:6;4013:14;3993:18;3990:38;3987:161;;4070:10;4065:3;4061:20;4058:1;4051:31;4105:4;4102:1;4095:15;4133:4;4130:1;4123:15;3987:161;;3774:380;;;:::o;4285:545::-;4387:2;4382:3;4379:11;4376:448;;;4423:1;4448:5;4444:2;4437:17;4493:4;4489:2;4479:19;4563:2;4551:10;4547:19;4544:1;4540:27;4534:4;4530:38;4599:4;4587:10;4584:20;4581:47;;;-1:-1:-1;4622:4:12;4581:47;4677:2;4672:3;4668:12;4665:1;4661:20;4655:4;4651:31;4641:41;;4732:82;4750:2;4743:5;4740:13;4732:82;;;4795:17;;;4776:1;4765:13;4732:82;;;4736:3;;;4376:448;4285:545;;;:::o;5006:1352::-;5132:3;5126:10;5159:18;5151:6;5148:30;5145:56;;;5181:18;;:::i;:::-;5210:97;5300:6;5260:38;5292:4;5286:11;5260:38;:::i;:::-;5254:4;5210:97;:::i;:::-;5362:4;;5426:2;5415:14;;5443:1;5438:663;;;;6145:1;6162:6;6159:89;;;-1:-1:-1;6214:19:12;;;6208:26;6159:89;-1:-1:-1;;4963:1:12;4959:11;;;4955:24;4951:29;4941:40;4987:1;4983:11;;;4938:57;6261:81;;5408:944;;5438:663;4232:1;4225:14;;;4269:4;4256:18;;-1:-1:-1;;5474:20:12;;;5592:236;5606:7;5603:1;5600:14;5592:236;;;5695:19;;;5689:26;5674:42;;5787:27;;;;5755:1;5743:14;;;;5622:19;;5592:236;;;5596:3;5856:6;5847:7;5844:19;5841:201;;;5917:19;;;5911:26;-1:-1:-1;;6000:1:12;5996:14;;;6012:3;5992:24;5988:37;5984:42;5969:58;5954:74;;5841:201;-1:-1:-1;;;;;6088:1:12;6072:14;;;6068:22;6055:36;;-1:-1:-1;5006:1352:12:o;6363:570::-;6568:2;6557:9;6550:21;6531:4;6600:6;6594:13;6643:6;6638:2;6627:9;6623:18;6616:34;6659:82;6734:6;6728:3;6717:9;6713:19;6706:4;6698:6;6694:17;6659:82;:::i;:::-;-1:-1:-1;;;;;6851:32:12;;;;6844:4;6829:20;;6822:62;-1:-1:-1;6915:2:12;6900:18;;6893:34;;;;6809:3;6802:2;6781:15;;;-1:-1:-1;;6777:29:12;6762:45;6758:55;;;-1:-1:-1;6363:570:12:o;6938:127::-;6999:10;6994:3;6990:20;6987:1;6980:31;7030:4;7027:1;7020:15;7054:4;7051:1;7044:15;7070:127;7131:10;7126:3;7122:20;7119:1;7112:31;7162:4;7159:1;7152:15;7186:4;7183:1;7176:15;7202:125;7267:9;;;7288:10;;;7285:36;;;7301:18;;:::i;:::-;7202:125;;;;:::o;7332:135::-;7371:3;7392:17;;;7389:43;;7412:18;;:::i;:::-;-1:-1:-1;7459:1:12;7448:13;;7332:135::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"./DcaHodlup.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n//import \"../node_modules/@ganache/console.log/console.sol\";\n\n/**\n * @title HodlupManager\n * @notice A contract for managing DCA (Dollar-Cost Averaging) pairs and their operations.\n * @dev This contract allows the owner to create and manage multiple DCA pairs and execute operations on them.\n */\ncontract HodlupManager is Ownable {\n    mapping(string => address) public dcaContracts;\n    string[] dcaContractsNames;\n\n    /**\n     * @dev Emitted when a new DCA pair is created.\n     * @param _name The name of the DCA pair.\n     * @param _contractAddress The address of the DCA pair contract.\n     * @param _timestamp The timestamp when the DCA pair was created.\n     */\n    event DcaCreated(string _name, address _contractAddress, uint256 _timestamp);\n\n    /**\n     * @dev Creates a new DCA pair contract.\n     * @param _name The name of the DCA pair.\n     * @param _tokenFrom Address of the input token for swaps.\n     * @param _tokenTo Address of the output token for swaps.\n     * @param _uniswapRouter Address of the Uniswap router.\n     * @param _fee The swap fee percentage.\n     * @return dcaContract The address of the created DCA pair contract.\n     * @notice This function creates a new DCA pair contract using the create2 method.\n     */\n    function createDcaPaire(\n        string memory _name,\n        address _tokenFrom,\n        address _tokenTo,\n        address _uniswapRouter,\n        uint256 _fee\n    ) external onlyOwner returns (address dcaContract) {\n        bytes32 salt = keccak256(abi.encodePacked(_name));\n        bytes memory bytecode = type(DcaHodlup).creationCode;\n\n        assembly {\n            dcaContract := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\n            if iszero(extcodesize(dcaContract)) { revert(0, 0) }\n        }\n        //console.logAddress(dcaContract);\n        DcaHodlup(dcaContract).initialize(_tokenFrom, _tokenTo, _uniswapRouter, _fee);\n\n        dcaContracts[_name] = dcaContract;\n        dcaContractsNames.push(_name);\n        emit DcaCreated(_name, dcaContract, block.timestamp);\n    }\n\n    /**\n     * @dev Withdraws fees from a DCA pair contract.\n     * @param contractName The name of the DCA pair contract.\n     * @return fees The amount of fees withdrawn.\n     * @notice This function allows the owner to withdraw fees from a specific DCA pair contract.\n     */\n    function withdrawFees(string memory contractName) public onlyOwner returns (uint256) {\n        return DcaHodlup(dcaContracts[contractName]).claimFees();\n    }\n\n    /**\n     * @dev Withdraws all fees from all DCA pair contracts.\n     * @return totalFees The total amount of fees withdrawn from all contracts.\n     * @notice This function allows the owner to withdraw all fees from all DCA pair contracts.\n     */\n    function withdrawAllFees() external onlyOwner returns (uint256 totalFees) {\n        uint256 dcaContNamesLength = dcaContractsNames.length;\n        for (uint256 j = 0; j < dcaContNamesLength; j++) {\n            string memory name = dcaContractsNames[j];\n            totalFees = totalFees + withdrawFees(name);\n        }\n    }\n\n    /**\n     * @dev Executes swaps for a specific DCA pair contract.\n     * @param contractName The name of the DCA pair contract.\n     * @notice This function allows the owner to execute swaps for a specific DCA pair contract.\n     */\n    function executeSwap(string memory contractName) public onlyOwner {\n        DcaHodlup(dcaContracts[contractName]).executeSwap();\n    }\n\n    /**\n     * @dev Executes swaps for all DCA pair contracts.\n     * @notice This function allows the owner to execute swaps for all DCA pair contracts.\n     */\n    function executeAllSwap() public onlyOwner {\n        uint256 dcaContNamesLength = dcaContractsNames.length;\n        for (uint256 j = 0; j < dcaContNamesLength; j++) {\n            string memory name = dcaContractsNames[j];\n            executeSwap(name);\n        }\n    }\n}\n",
  "sourcePath": "/home/sjouany/ProjetFinal/HodlUp/truffle/contracts/HodlupManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/HodlupManager.sol",
    "exportedSymbols": {
      "Address": [
        2230
      ],
      "Context": [
        2252
      ],
      "DcaHodlup": [
        1189
      ],
      "HodlupManager": [
        1388
      ],
      "IERC20": [
        1583
      ],
      "IERC20Permit": [
        1619
      ],
      "ISwapRouter": [
        2352
      ],
      "IUniswapV3SwapCallback": [
        13
      ],
      "Ownable": [
        1505
      ],
      "SafeERC20": [
        1900
      ]
    },
    "id": 1389,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1191,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "absolutePath": "project:/contracts/DcaHodlup.sol",
        "file": "./DcaHodlup.sol",
        "id": 1192,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1389,
        "sourceUnit": 1190,
        "src": "59:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 1193,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1389,
        "sourceUnit": 1506,
        "src": "85:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1195,
              "name": "Ownable",
              "nameLocations": [
                "476:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1505,
              "src": "476:7:2"
            },
            "id": 1196,
            "nodeType": "InheritanceSpecifier",
            "src": "476:7:2"
          }
        ],
        "canonicalName": "HodlupManager",
        "contractDependencies": [
          1189
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1194,
          "nodeType": "StructuredDocumentation",
          "src": "216:233:2",
          "text": " @title HodlupManager\n @notice A contract for managing DCA (Dollar-Cost Averaging) pairs and their operations.\n @dev This contract allows the owner to create and manage multiple DCA pairs and execute operations on them."
        },
        "fullyImplemented": true,
        "id": 1388,
        "linearizedBaseContracts": [
          1388,
          1505,
          2252
        ],
        "name": "HodlupManager",
        "nameLocation": "459:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "94ea3387",
            "id": 1200,
            "mutability": "mutable",
            "name": "dcaContracts",
            "nameLocation": "524:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1388,
            "src": "490:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 1199,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1197,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "498:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "490:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1198,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "508:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1203,
            "mutability": "mutable",
            "name": "dcaContractsNames",
            "nameLocation": "551:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1388,
            "src": "542:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 1201,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "542:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 1202,
              "nodeType": "ArrayTypeName",
              "src": "542:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1204,
              "nodeType": "StructuredDocumentation",
              "src": "575:248:2",
              "text": " @dev Emitted when a new DCA pair is created.\n @param _name The name of the DCA pair.\n @param _contractAddress The address of the DCA pair contract.\n @param _timestamp The timestamp when the DCA pair was created."
            },
            "eventSelector": "ba2ffa1886908ded7f5c34a05cf9ddb538ac0a72200e97db4b78757b710da553",
            "id": 1212,
            "name": "DcaCreated",
            "nameLocation": "834:10:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "852:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "845:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "867:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "859:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "893:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "885:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:60:2"
            },
            "src": "828:77:2"
          },
          {
            "body": {
              "id": 1276,
              "nodeType": "Block",
              "src": "1623:580:2",
              "statements": [
                {
                  "assignments": [
                    1231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1641:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1276,
                      "src": "1633:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1633:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1238,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1235,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "1675:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1233,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1658:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1662:12:2",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1658:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1658:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1232,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1648:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1633:49:2"
                },
                {
                  "assignments": [
                    1240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1705:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1276,
                      "src": "1692:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1239,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1245,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1242,
                          "name": "DcaHodlup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "1721:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DcaHodlup_$1189_$",
                            "typeString": "type(contract DcaHodlup)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_DcaHodlup_$1189_$",
                            "typeString": "type(contract DcaHodlup)"
                          }
                        ],
                        "id": 1241,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1716:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1716:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_DcaHodlup_$1189",
                        "typeString": "type(contract DcaHodlup)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1732:12:2",
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1716:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1692:52:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1764:158:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1778:69:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1801:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1808:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1818:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1804:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1804:19:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1831:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1825:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1825:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1842:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1793:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1793:54:2"
                        },
                        "variableNames": [
                          {
                            "name": "dcaContract",
                            "nodeType": "YulIdentifier",
                            "src": "1778:11:2"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1896:16:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1905:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1908:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1898:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1898:12:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1898:12:2"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dcaContract",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:11:2"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "1870:11:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1870:24:2"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1863:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1863:32:2"
                        },
                        "nodeType": "YulIf",
                        "src": "1860:52:2"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 1240,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1808:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1240,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1831:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1228,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1778:11:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1228,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1882:11:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1231,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1842:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 1246,
                  "nodeType": "InlineAssembly",
                  "src": "1755:167:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1251,
                        "name": "_tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "2008:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1252,
                        "name": "_tokenTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "2020:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1253,
                        "name": "_uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1221,
                        "src": "2030:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1254,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1223,
                        "src": "2046:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1248,
                            "name": "dcaContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1228,
                            "src": "1984:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1247,
                          "name": "DcaHodlup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "1974:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DcaHodlup_$1189_$",
                            "typeString": "type(contract DcaHodlup)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1974:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DcaHodlup_$1189",
                          "typeString": "contract DcaHodlup"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1997:10:2",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "1974:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:77:2"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1257,
                        "name": "dcaContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "2062:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 1259,
                      "indexExpression": {
                        "id": 1258,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "2075:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2062:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1260,
                      "name": "dcaContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1228,
                      "src": "2084:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2062:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1266,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "2128:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1263,
                        "name": "dcaContractsNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "2105:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 1265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2123:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2105:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2105:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1270,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "2160:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1271,
                        "name": "dcaContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "2167:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1272,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2180:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2186:9:2",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2180:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1269,
                      "name": "DcaCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1212,
                      "src": "2149:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,address,uint256)"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "EmitStatement",
                  "src": "2144:52:2"
                }
              ]
            },
            "documentation": {
              "id": 1213,
              "nodeType": "StructuredDocumentation",
              "src": "911:491:2",
              "text": " @dev Creates a new DCA pair contract.\n @param _name The name of the DCA pair.\n @param _tokenFrom Address of the input token for swaps.\n @param _tokenTo Address of the output token for swaps.\n @param _uniswapRouter Address of the Uniswap router.\n @param _fee The swap fee percentage.\n @return dcaContract The address of the created DCA pair contract.\n @notice This function creates a new DCA pair contract using the create2 method."
            },
            "functionSelector": "5145b2b4",
            "id": 1277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1225,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1583:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1424,
                  "src": "1583:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1583:9:2"
              }
            ],
            "name": "createDcaPaire",
            "nameLocation": "1416:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1454:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1440:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "_tokenFrom",
                  "nameLocation": "1477:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1469:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_tokenTo",
                  "nameLocation": "1505:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1497:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "_uniswapRouter",
                  "nameLocation": "1531:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1523:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1563:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1555:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:143:2"
            },
            "returnParameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1228,
                  "mutability": "mutable",
                  "name": "dcaContract",
                  "nameLocation": "1610:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "1602:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:21:2"
            },
            "scope": 1388,
            "src": "1407:796:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1295,
              "nodeType": "Block",
              "src": "2573:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1288,
                              "name": "dcaContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "2600:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1290,
                            "indexExpression": {
                              "id": 1289,
                              "name": "contractName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "2613:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2600:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1287,
                          "name": "DcaHodlup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "2590:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DcaHodlup_$1189_$",
                            "typeString": "type(contract DcaHodlup)"
                          }
                        },
                        "id": 1291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2590:37:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DcaHodlup_$1189",
                          "typeString": "contract DcaHodlup"
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2628:9:2",
                      "memberName": "claimFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "2590:47:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1286,
                  "id": 1294,
                  "nodeType": "Return",
                  "src": "2583:56:2"
                }
              ]
            },
            "documentation": {
              "id": 1278,
              "nodeType": "StructuredDocumentation",
              "src": "2209:274:2",
              "text": " @dev Withdraws fees from a DCA pair contract.\n @param contractName The name of the DCA pair contract.\n @return fees The amount of fees withdrawn.\n @notice This function allows the owner to withdraw fees from a specific DCA pair contract."
            },
            "functionSelector": "007fedfe",
            "id": 1296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1282,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2545:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1424,
                  "src": "2545:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2545:9:2"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "2497:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "2524:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "2510:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2509:28:2"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "2564:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2564:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2563:9:2"
            },
            "scope": 1388,
            "src": "2488:158:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1335,
              "nodeType": "Block",
              "src": "2978:250:2",
              "statements": [
                {
                  "assignments": [
                    1305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1305,
                      "mutability": "mutable",
                      "name": "dcaContNamesLength",
                      "nameLocation": "2996:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "2988:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2988:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1308,
                  "initialValue": {
                    "expression": {
                      "id": 1306,
                      "name": "dcaContractsNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "3017:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3035:6:2",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3017:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:53:2"
                },
                {
                  "body": {
                    "id": 1333,
                    "nodeType": "Block",
                    "src": "3100:122:2",
                    "statements": [
                      {
                        "assignments": [
                          1320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1320,
                            "mutability": "mutable",
                            "name": "name",
                            "nameLocation": "3128:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1333,
                            "src": "3114:18:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1319,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3114:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1324,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1321,
                            "name": "dcaContractsNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "3135:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 1323,
                          "indexExpression": {
                            "id": 1322,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1310,
                            "src": "3153:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3135:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3114:41:2"
                      },
                      {
                        "expression": {
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1325,
                            "name": "totalFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1302,
                            "src": "3169:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1326,
                              "name": "totalFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "3181:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 1328,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "3206:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1327,
                                "name": "withdrawFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1296,
                                "src": "3193:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (string memory) returns (uint256)"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3193:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3181:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3169:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1332,
                        "nodeType": "ExpressionStatement",
                        "src": "3169:42:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1313,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "3071:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1314,
                      "name": "dcaContNamesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "3075:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3071:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1334,
                  "initializationExpression": {
                    "assignments": [
                      1310
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1310,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "3064:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "3056:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1312,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3056:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3095:3:2",
                      "subExpression": {
                        "id": 1316,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "3095:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1318,
                    "nodeType": "ExpressionStatement",
                    "src": "3095:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3051:171:2"
                }
              ]
            },
            "documentation": {
              "id": 1297,
              "nodeType": "StructuredDocumentation",
              "src": "2652:247:2",
              "text": " @dev Withdraws all fees from all DCA pair contracts.\n @return totalFees The total amount of fees withdrawn from all contracts.\n @notice This function allows the owner to withdraw all fees from all DCA pair contracts."
            },
            "functionSelector": "af236af4",
            "id": 1336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1299,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2940:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1424,
                  "src": "2940:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2940:9:2"
              }
            ],
            "name": "withdrawAllFees",
            "nameLocation": "2913:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:2:2"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "totalFees",
                  "nameLocation": "2967:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "2959:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2958:19:2"
            },
            "scope": 1388,
            "src": "2904:324:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "3536:68:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1345,
                              "name": "dcaContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "3556:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1347,
                            "indexExpression": {
                              "id": 1346,
                              "name": "contractName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "3569:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3556:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1344,
                          "name": "DcaHodlup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "3546:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DcaHodlup_$1189_$",
                            "typeString": "type(contract DcaHodlup)"
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3546:37:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DcaHodlup_$1189",
                          "typeString": "contract DcaHodlup"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3584:11:2",
                      "memberName": "executeSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1091,
                      "src": "3546:49:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3546:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:51:2"
                }
              ]
            },
            "documentation": {
              "id": 1337,
              "nodeType": "StructuredDocumentation",
              "src": "3234:231:2",
              "text": " @dev Executes swaps for a specific DCA pair contract.\n @param contractName The name of the DCA pair contract.\n @notice This function allows the owner to execute swaps for a specific DCA pair contract."
            },
            "functionSelector": "92c4b289",
            "id": 1353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1341,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3526:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1424,
                  "src": "3526:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3526:9:2"
              }
            ],
            "name": "executeSwap",
            "nameLocation": "3479:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "3505:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1353,
                  "src": "3491:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3490:28:2"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3536:0:2"
            },
            "scope": 1388,
            "src": "3470:134:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1386,
              "nodeType": "Block",
              "src": "3815:225:2",
              "statements": [
                {
                  "assignments": [
                    1360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1360,
                      "mutability": "mutable",
                      "name": "dcaContNamesLength",
                      "nameLocation": "3833:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1386,
                      "src": "3825:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3825:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1363,
                  "initialValue": {
                    "expression": {
                      "id": 1361,
                      "name": "dcaContractsNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "3854:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3872:6:2",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3854:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:53:2"
                },
                {
                  "body": {
                    "id": 1384,
                    "nodeType": "Block",
                    "src": "3937:97:2",
                    "statements": [
                      {
                        "assignments": [
                          1375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1375,
                            "mutability": "mutable",
                            "name": "name",
                            "nameLocation": "3965:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1384,
                            "src": "3951:18:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3951:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1379,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1376,
                            "name": "dcaContractsNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "3972:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 1378,
                          "indexExpression": {
                            "id": 1377,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "3990:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3972:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3951:41:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1381,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "4018:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1380,
                            "name": "executeSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "4006:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4006:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1383,
                        "nodeType": "ExpressionStatement",
                        "src": "4006:17:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1368,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "3908:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1369,
                      "name": "dcaContNamesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "3912:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3908:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1385,
                  "initializationExpression": {
                    "assignments": [
                      1365
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "3901:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1385,
                        "src": "3893:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1367,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3905:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3893:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3932:3:2",
                      "subExpression": {
                        "id": 1371,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "3932:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1373,
                    "nodeType": "ExpressionStatement",
                    "src": "3932:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3888:146:2"
                }
              ]
            },
            "documentation": {
              "id": 1354,
              "nodeType": "StructuredDocumentation",
              "src": "3610:157:2",
              "text": " @dev Executes swaps for all DCA pair contracts.\n @notice This function allows the owner to execute swaps for all DCA pair contracts."
            },
            "functionSelector": "de55dbbc",
            "id": 1387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1357,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1356,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3805:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1424,
                  "src": "3805:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3805:9:2"
              }
            ],
            "name": "executeAllSwap",
            "nameLocation": "3781:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3795:2:2"
            },
            "returnParameters": {
              "id": 1358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3815:0:2"
            },
            "scope": 1388,
            "src": "3772:268:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1389,
        "src": "450:3592:2",
        "usedErrors": []
      }
    ],
    "src": "33:4010:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0xba2ffa1886908ded7f5c34a05cf9ddb538ac0a72200e97db4b78757b710da553": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "DcaCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3C4D5E6aD973365428C817d0816E40f7D5cA82D2",
      "transactionHash": "0xf2bd2b377aaa389bdf2315fe610ad73820c45082d7c7400e004b9a8b21e15bac"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-12-11T21:53:44.921Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This contract allows the owner to create and manage multiple DCA pairs and execute operations on them.",
    "events": {
      "DcaCreated(string,address,uint256)": {
        "details": "Emitted when a new DCA pair is created.",
        "params": {
          "_contractAddress": "The address of the DCA pair contract.",
          "_name": "The name of the DCA pair.",
          "_timestamp": "The timestamp when the DCA pair was created."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "createDcaPaire(string,address,address,address,uint256)": {
        "details": "Creates a new DCA pair contract.",
        "params": {
          "_fee": "The swap fee percentage.",
          "_name": "The name of the DCA pair.",
          "_tokenFrom": "Address of the input token for swaps.",
          "_tokenTo": "Address of the output token for swaps.",
          "_uniswapRouter": "Address of the Uniswap router."
        },
        "returns": {
          "dcaContract": "The address of the created DCA pair contract."
        }
      },
      "executeAllSwap()": {
        "details": "Executes swaps for all DCA pair contracts."
      },
      "executeSwap(string)": {
        "details": "Executes swaps for a specific DCA pair contract.",
        "params": {
          "contractName": "The name of the DCA pair contract."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawAllFees()": {
        "details": "Withdraws all fees from all DCA pair contracts.",
        "returns": {
          "totalFees": "The total amount of fees withdrawn from all contracts."
        }
      },
      "withdrawFees(string)": {
        "details": "Withdraws fees from a DCA pair contract.",
        "params": {
          "contractName": "The name of the DCA pair contract."
        },
        "returns": {
          "_0": "fees The amount of fees withdrawn."
        }
      }
    },
    "title": "HodlupManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createDcaPaire(string,address,address,address,uint256)": {
        "notice": "This function creates a new DCA pair contract using the create2 method."
      },
      "executeAllSwap()": {
        "notice": "This function allows the owner to execute swaps for all DCA pair contracts."
      },
      "executeSwap(string)": {
        "notice": "This function allows the owner to execute swaps for a specific DCA pair contract."
      },
      "withdrawAllFees()": {
        "notice": "This function allows the owner to withdraw all fees from all DCA pair contracts."
      },
      "withdrawFees(string)": {
        "notice": "This function allows the owner to withdraw fees from a specific DCA pair contract."
      }
    },
    "notice": "A contract for managing DCA (Dollar-Cost Averaging) pairs and their operations.",
    "version": 1
  }
}